{
	"name": "inertia-intellisense",
	"displayName": "Inertia IntelliSense",
	"description": "Fork of Visual Studio Code extension for Inertia.js",
	"version": "0.0.5",
	"repository": "https://github.com/jaush-m/inertia-intellisense",
	"publisher": "jaush-m",
	"categories": ["Other"],
	"keywords": ["inertia", "inertiajs", "laravel", "react", "vue"],
	"license": "MIT",
	"main": "./dist/extension.js",
	"browser": "./dist/extension.js",
	"scripts": {
		"build": "bun build --format cjs --outdir dist --external vscode src/extension.ts",
		"dev": "bun build --watch --format cjs --outdir dist --external vscode src/extension.ts ",
		"package": "vsce package --out inertia.vsix",
		"publish:vsce": "vsce publish --packagePath inertia.vsix",
		"publish:ovsx": "ovsx publish inertia.vsix"
	},
	"contributes": {
		"configuration": [
			{
				"title": "Inertia.js",
				"properties": {
					"inertia.defaultDomain": {
						"type": "string",
						"default": "main",
						"description": "Default domain for component resolution. This setting only affects how the extension resolves the component paths and autocompletion, and you must ensure that your Inertia setup handles them as well."
					},
					"inertia.componentGroups": {
						"type": "array",
						"description": "List of component group globs. Each item represents a pattern to match Inertia page components in your application.",
						"items": {
							"type": "object",
							"required": ["glob", "domainDir", "pagesDir"],
							"properties": {
								"glob": {
									"type": "string",
									"description": "Glob pattern for locating components."
								},
								"domainDir": {
									"type": "string",
									"description": "Subdirectory wildcard representing domain-level folder."
								},
								"pagesDir": {
									"type": "string",
									"description": "Subdirectory under domainDir containing pages."
								}
							}
						},
						"default": [
							{
								"glob": "resources/js/domains/*/pages/**/*.tsx",
								"domainDir": "domains",
								"pagesDir": "pages"
							}
						]
					},
					"inertia.pathSeparators": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"default": ["."],
						"markdownDescription": "The allowed path separators for component names.\n\n**This setting only affects how the extension resolves the component paths and autocompletion, and you must ensure that your Inertia setup handles them as well.**\n\n**When using autocompletion, component names will be shown with the first path separator.**"
					},
					"inertia.defaultExtension": {
						"type": "string",
						"default": ".tsx",
						"description": "The default file extension to use when generating hyperlinks to components that do not yet exist on the filesystem."
					}
				}
			}
		]
	},
	"activationEvents": ["workspaceContains:**/*Inertia*", "onLanguage:php"],
	"dependencies": {
		"vscode-uri": "^3.0.7"
	},
	"devDependencies": {
		"@biomejs/biome": "^1.9.4",
		"@types/node": "^18.11.18",
		"@types/vscode": "^1.73.0",
		"@vscode/vsce": "^3.2.2",
		"lefthook": "^1.10.10",
		"ovsx": "^0.10.1",
		"rome": "^12.1.3"
	},
	"engines": {
		"vscode": "^1.73.0"
	},
	"icon": "inertia.png",
	"galleryBanner": {},
	"vsce": {
		"dependencies": false,
		"qna": "marketplace"
	}
}
